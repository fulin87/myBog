---
layout: post
title:  "FastJson的使用与源码解读"
date:	2016-10-10 13:07:11 +0800
categories: java
---

> **[FastJSON](https://github.com/alibaba/fastjson/wiki)**是一个处理**[JSON](http://json.org)**的 java 工具包， json （反序列化）和对象转 json （序列化）两部分的功能。是由阿里使用Apache License 2.0协议开源，易用，无依赖，性能优越，唯一不足的是文档不完善，用户需要自己根据源码来摸索。这里记录一下自己的学习历程，作为我膜拜大师杰作，虚心偷技的成果，也方便来者学习。

### 主要功能

 * FastJson的最主要的使用入口是 com.alibaba.fastjson.JSON 的一系列静态方法

		// 把JSON文本parse为JSONObject或者JSONArray 
		public static final Object parse(String text); 
		// 把JSON文本parse成JSONObject
		public static final JSONObject parseObject(String text)； 
		// 把JSON文本parse为JavaBean
		public static final  T parseObject(String text, Class clazz); 
		// 把JSON文本parse成JSONArray
		public static final JSONArray parseArray(String text); 
		// 把JSON文本parse成JavaBean集合
		public static final  List parseArray(String text, Class clazz); 
		// 将JavaBean序列化为JSON文本
		public static final String toJSONString(Object object); 
		// 将JavaBean序列化为带格式的JSON文本 
		public static final String toJSONString(Object object, boolean prettyFormat); 
		// 将JavaBean转换为JSONObject或者JSONArray。
		public static final Object toJSON(Object javaObject); 

 * FastJson 的相关类的说明

		SerializeWriter：	相当于StringBuffer
		JSONArray：			相当于List<Object>
		JSONObject：			相当于Map<String, Object>
		JSON反序列化没有真正的数组，本质类型都是List<Object>

 * FastJson 的高级特性

	*支持注解、支持全类型序列化，这些都是很好的特性，功能强大*


	* 序列化形式可以自定义和灵活选择
	
		比如有一个注解：@JSONField;就可以实现序列号和反序列化的时候bean的属性名的灵活配置，非常实用。
		

### 源码解析
	
 ![](/image/fastJson.PNG)

 已经有前辈总结了心得,可以先理解透彻再自己去看源代码。
 记录在此，以后来完善。

**[FastJson的源码研究](http://www.csdn.net/article/2014-09-25/2821866)**

**[FastJson为什么这么快](http://www.iteye.com/topic/1113183)**

**[FastJson SerializerFeature的使用](http://blog.csdn.net/u010246789/article/details/52539576)**