---
layout: post
title:	"python基础知识点模块和包"
date:	2016-11-21 13:07:11 +0800
categories:	编程语言
---

> 初次接触python对它的模块和包的概念感觉非常的绕，和java中的包的概念有很大的出入，总是迷迷糊糊的。这里记录一下自己的理解。

## 模块

 模块其实就是Python代码组成的文本文件，其实也就是一个命名空间。

 * 在一个模块文件的顶层定义的所有变量都会成为被导入模块的属性
 * 导入给予了对模块的全局作用域中的变量名的读取权也就是在模块导入后，模块文件的全局作用域变成了模块对象的命名空间
 * 模块其实就是变量名的软件包
 * import和from语句都是可执行的赋值语句

		a.py
		b.py
		两个文件
		在模块a.py中执行
	
		import b
		效果是先执行b.py中的代码，然后在a.py中定义了一个变量b，引用了b.py的命名空间

 * import 和 from ... import ...

		from module import name1,name2

		等价于下面的语句
	
		import module
		name1 = module.name1
		name2 = module.name2
		del module

 * 如果属性名前面有`_`,就不会被`from c import *`导入

### 模块的作用

 * 代码重用
 * 系统命名空间划分
 * 实现数据和服务的共享

## 包

 python代码以及其所在的目录就是包。包的容器目录（顶层目录）需要能在搜索列表中存在，包其实也是一种命名空间

 * 只有`__init__.py`文件的目录才能称之为包
 * 包导入就是把计算机上的目录变成一个Python命名空间，而这个命名空间的属性则是对应目录中的子目录和模块文件
 * 包导入之后，包就和模块没什么区别了
 * 包第一次导入时，会自动执行`__init__.py`文件中的代码

## 分发与安装

 * 注意关注 `distutils` 这个工具的使用
 * 注意关注 `eggs` 这个开源系统的使用 