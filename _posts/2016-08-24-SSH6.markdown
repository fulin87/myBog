---
layout: post
title:	"Linux基础知识点六之定时任务"
date:	2016-08-24 13:07:11 +0800
categories:	linux
---


* Table of Contents
{:toc}

> Linux的定时任务是必须要掌握的技能，与Linux定时任务相关的知识点，记录在此。

 linux的定时任务分为两类：

## 系统自身定期执行的任务

	/var/log/message
	/var/log/secure

	此外还有：
	# ls -l /etc/ | grep cron
	-rw-------.  1 root root      541 Jul 27  2015 anacrontab
	drwxr-xr-x.  2 root root       20 Jun 20 20:35 cron.d
	drwxr-xr-x.  2 root root       62 Jun 20 20:35 cron.daily
	-rw-------.  1 root root        0 Jul 27  2015 cron.deny
	drwxr-xr-x.  2 root root       44 Jun 20 20:35 cron.hourly
	drwxr-xr-x.  2 root root        6 Jun  9  2014 cron.monthly
	-rw-r--r--.  1 root root      451 Jun  9  2014 crontab
	drwxr-xr-x.  2 root root        6 Jun  9  2014 cron.weekly

## 用户执行的定时任务

 + `at` 定时任务,突发性的任务，依赖于atd服务。
 + `anacron` 定时任务，适合于非7*24小时开机的服务，比如开机后执行一遍。
 + `crond` 定时任务，Crond服务默认每分钟，会检查系统中是否有需要执行的任务。
 	
### crond 定时任务详解

 * 相关配置文件

		/etc/cron.deny     
			此文件中所列用户不允许使用crontab命令
		/etc/cron.allow	   
			此文件中所列用户允许使用crontab命令，优先于/etc/cron.deny
		/var/spool/cron/   
			所有用户crontab配置文件默认都存放在此目录，文件名以用户名命名
 * 相关命令

		-l 查看crontab文件内容，相当于查看当前用户的crontab定时任务有哪些
		-e 编辑crontab文件内容，相对于编辑当前用户的crontab定时任务
		-u 指定特定的用户
		-i 删除crontab文件内容，删除前会提示确认，很少使用
		-r 删除crontab文件内容，很少使用。

		crontab -l  #查看当前用户的crontab定时任务
		crontab -e  #编辑当前用户的crontab定时任务
		crontab -u mwopr -l #查看mwopr这个用户的crontab定时任务

	*`crontab` 命令实际操作的是 `/var/spool/cron/` 目录下对应的文件*

 * cron 表达式

	+ 系统的cron表达式，有8列

			cat /etc/crontab

			01 * * * * root run-parts /etc/cron.hourly
			02 4 * * * root run-parts /etc/cron.daily
			22 4 * * 0 root run-parts /etc/cron.weekly
			42 4 1 * * root run-parts /etc/cron.monthly

	+ 用户的cron表达式，有6列

			crontab -l

			0 * * * * /data/jobscripts/run_status60.sh
			*/5 7-23 * * * /data/jobscripts/run_sendsms.sh
			0 4 * * * /data/jobscripts/run_orgs.sh

	+ cron表达式的格式，口诀（`分时日月周`）

			.---------------- minute (0 - 59)
			|  .------------- hour (0 - 23)
			|  |  .---------- day of month (1 - 31)
			|  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
			|  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
			|  |  |  |  |
			*  *  *  *  *

		见下图详细解释

		![](/image/crontab.PNG)

		例如	
	
			30 */6 * * * a.sh >/dev/null 2>&1
				每6个小时的半点时刻执行a.sh
			30 8-18/2 * * * a.sh >/dev/null 2>&1
				上午8点到下午18点之间每隔2小时的半点时刻执行a.sh
			30 21 * * * a.sh
				每天晚上9点半执行a.sh
			45 4 1,10,22 * * a.sh >/dev/null 2>&1
				每个月的1号，10号，22号的凌晨4点45分执行a.sh
			10 1 * * 6,0 a.sh >/dev/null 2>&1
				每周6和周日的凌晨1点10分执行a.sh
			0,30 18-23 * * * a.sh >/dev/null 2>&1
				每天的18点到23点之间，0分和30分的时候执行a.sh
			00 */1 * * * a.sh >/dev/null 2>&1
				每隔一个小时的整点执行a.sh
			* 23,00-07/1 * * * a.sh >/dev/null 2>&1
				每天的23点的时候和0点到7点之间每隔一个小时的时候，每分钟执行一次a.sh
			00 11 * 4 1-3 a.sh >/dev/null 2>&1
				4月的每周一到周三上午11点执行a.sh	
		***>/dev/null 2>&1******意思是将标准输出和标准错误输出都重定向到/dev/null这个空文件去，防止产生系统垃圾***

	+ crond服务的查看和启动
	
			/etc/init.d/crond status  # 查看crond 的状态
			/etc/init.d/crond start	  # 启动crond服务
			/etc/init.d/crond restart # 重启crond服务

### cron定时任务故障解决方案

 * 首先crond服务是否已经开启
 * 查看crond的日志文件 `/var/log/cron`

	
			
 