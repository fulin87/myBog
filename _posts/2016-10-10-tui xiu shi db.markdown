---
layout: post
title:  "忒修斯之船 & 数据库"
date:	2016-10-10 13:07:11 +0800
categories: life
---

`这是一个古老的哲学问题`

> 忒修斯的船在海上航行了几百年,它被不间断地维修和替换部件。只要一块木板腐烂了，它就会被替换掉，以此类推，直到所有的功能部件都不是最开始的那些了。
问题是，最终产生的这艘船是否还是原来的那艘特修斯之船，还是一艘完全不同的船？如果不是原来的船，那么在什么时候它不再是原来的船了？
哲学家托马斯·霍布斯后来对此进来了延伸，如果用特修斯之船上取下来的老部件来重新建造一艘新的船，那么两艘船中哪艘才是真正的特修斯之船？

`几百年来，人们在这个问题上争论不休，谁也不能彻底说服对方，但是这个看似不能解决的问题却能带给我们一定的启发，那就是可以解释生活中的现象`

> 一群能力超群的软件工程师在一家软件公司工作，做了一个伟大的产品，经过几年的迭代，产品从UI到逻辑，甚至数据库结构都发生了翻天覆地的变化，以至于这个产品最初的创造者也看不懂它的源代码了，越来越多的人开始吐槽......

`问题来了，这个产品还是原来的那个伟大的产品吗？`

### 渐变

	数据库中有一条SKU的数据记录，本来SKU编码可以用来识别这条数据的唯一性。
	可惜，一开始的时候为了图方便没有定好编码生成规则，后来需要改。
	这一改麻烦了，唯一性只好由SKU的ID来负责，这也带来了一连串的问题因为
	SKU的编码原本不仅有唯一性的约束功能，还有很多识别功能，而ID显然是没有。
	因为变更，也带来的新的问题：怎样监控变更的历史。
	于是诸如这样新的字段被不断加入
	
	"update_time ; insert_time ; update_user ; last_status"

	这些新增的信息让我们能尽可能多的追溯到当时的场景，可是这样好吗？

悲哀的是，现实中大部分的软件系统，都无法逃脱冗余和混乱的宿命，这也再次印证了物理中“熵”的概念：任何事物都是朝混乱度大的方向发展。

### 质变

`如果不是原来的船，那么在什么时候它不再是原来的船了?`

	当唯一识别标示失效的时候，它就不再是原来的船了。可是，什么是唯一识别标示？
	身份证可以伪装，DNA都有可能相同，茫茫人海，是有可能存在两个你无法区分的人的。
	
*世界上不存在绝对的唯一性，所谓的唯一只存在于我们的想象中*

### 启示

	“任何系统熵都是逐渐变大的，自然状态下无法逆转，若想改变，必须做功。”
	这一物理学的规律同样适用于现实生活。虽然我们无法做的绝对，但是可以尽量精确。
	流程和标准就是行之有效的方法，甚至是唯一可行的方法。


	